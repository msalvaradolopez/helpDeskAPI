//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace helpDeskAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbQuantusEntities : DbContext
    {
        public dbQuantusEntities()
            : base("name=dbQuantusEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<hdCLIENTE> hdCLIENTE { get; set; }
        public virtual DbSet<hdDEPTO> hdDEPTO { get; set; }
        public virtual DbSet<hdSUCURSAL> hdSUCURSAL { get; set; }
        public virtual DbSet<hdTICKET> hdTICKET { get; set; }
        public virtual DbSet<hdTICKETDET> hdTICKETDET { get; set; }
        public virtual DbSet<hdTICKETDETFILE> hdTICKETDETFILE { get; set; }
        public virtual DbSet<hdTICKETFILE> hdTICKETFILE { get; set; }
        public virtual DbSet<hdTICKETTASK> hdTICKETTASK { get; set; }
        public virtual DbSet<hdTIPO> hdTIPO { get; set; }
        public virtual DbSet<hdUSUARIO> hdUSUARIO { get; set; }
        public virtual DbSet<hdPARAM> hdPARAM { get; set; }
        public virtual DbSet<hdSLA> hdSLA { get; set; }
    
        public virtual ObjectResult<ticketsBySucTemaList_Result> ticketsBySucTemaList(Nullable<int> idCliente, string listaSucursales, string listaTemas, string listaEstatus, Nullable<int> rangoFechaSiNo, Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var listaSucursalesParameter = listaSucursales != null ?
                new ObjectParameter("listaSucursales", listaSucursales) :
                new ObjectParameter("listaSucursales", typeof(string));
    
            var listaTemasParameter = listaTemas != null ?
                new ObjectParameter("listaTemas", listaTemas) :
                new ObjectParameter("listaTemas", typeof(string));
    
            var listaEstatusParameter = listaEstatus != null ?
                new ObjectParameter("listaEstatus", listaEstatus) :
                new ObjectParameter("listaEstatus", typeof(string));
    
            var rangoFechaSiNoParameter = rangoFechaSiNo.HasValue ?
                new ObjectParameter("rangoFechaSiNo", rangoFechaSiNo) :
                new ObjectParameter("rangoFechaSiNo", typeof(int));
    
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ticketsBySucTemaList_Result>("ticketsBySucTemaList", idClienteParameter, listaSucursalesParameter, listaTemasParameter, listaEstatusParameter, rangoFechaSiNoParameter, fechaIniParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<ticketsByTemaSucList_Result> ticketsByTemaSucList(Nullable<int> idCliente, string listaSucursales, string listaTemas, string listaEstatus, Nullable<int> rangoFechaSiNo, Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var listaSucursalesParameter = listaSucursales != null ?
                new ObjectParameter("listaSucursales", listaSucursales) :
                new ObjectParameter("listaSucursales", typeof(string));
    
            var listaTemasParameter = listaTemas != null ?
                new ObjectParameter("listaTemas", listaTemas) :
                new ObjectParameter("listaTemas", typeof(string));
    
            var listaEstatusParameter = listaEstatus != null ?
                new ObjectParameter("listaEstatus", listaEstatus) :
                new ObjectParameter("listaEstatus", typeof(string));
    
            var rangoFechaSiNoParameter = rangoFechaSiNo.HasValue ?
                new ObjectParameter("rangoFechaSiNo", rangoFechaSiNo) :
                new ObjectParameter("rangoFechaSiNo", typeof(int));
    
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ticketsByTemaSucList_Result>("ticketsByTemaSucList", idClienteParameter, listaSucursalesParameter, listaTemasParameter, listaEstatusParameter, rangoFechaSiNoParameter, fechaIniParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<porcBySuc_Result> porcBySuc(Nullable<int> idCliente, string listaSucursales, string listaTemas, string listaEstatus, Nullable<int> rangoFechaSiNo, Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var listaSucursalesParameter = listaSucursales != null ?
                new ObjectParameter("listaSucursales", listaSucursales) :
                new ObjectParameter("listaSucursales", typeof(string));
    
            var listaTemasParameter = listaTemas != null ?
                new ObjectParameter("listaTemas", listaTemas) :
                new ObjectParameter("listaTemas", typeof(string));
    
            var listaEstatusParameter = listaEstatus != null ?
                new ObjectParameter("listaEstatus", listaEstatus) :
                new ObjectParameter("listaEstatus", typeof(string));
    
            var rangoFechaSiNoParameter = rangoFechaSiNo.HasValue ?
                new ObjectParameter("rangoFechaSiNo", rangoFechaSiNo) :
                new ObjectParameter("rangoFechaSiNo", typeof(int));
    
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<porcBySuc_Result>("porcBySuc", idClienteParameter, listaSucursalesParameter, listaTemasParameter, listaEstatusParameter, rangoFechaSiNoParameter, fechaIniParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<porcByTema_Result> porcByTema(Nullable<int> idCliente, string listaSucursales, string listaTemas, string listaEstatus, Nullable<int> rangoFechaSiNo, Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var listaSucursalesParameter = listaSucursales != null ?
                new ObjectParameter("listaSucursales", listaSucursales) :
                new ObjectParameter("listaSucursales", typeof(string));
    
            var listaTemasParameter = listaTemas != null ?
                new ObjectParameter("listaTemas", listaTemas) :
                new ObjectParameter("listaTemas", typeof(string));
    
            var listaEstatusParameter = listaEstatus != null ?
                new ObjectParameter("listaEstatus", listaEstatus) :
                new ObjectParameter("listaEstatus", typeof(string));
    
            var rangoFechaSiNoParameter = rangoFechaSiNo.HasValue ?
                new ObjectParameter("rangoFechaSiNo", rangoFechaSiNo) :
                new ObjectParameter("rangoFechaSiNo", typeof(int));
    
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<porcByTema_Result>("porcByTema", idClienteParameter, listaSucursalesParameter, listaTemasParameter, listaEstatusParameter, rangoFechaSiNoParameter, fechaIniParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<getTicketsByDashBoard_Result> getTicketsByDashBoard(Nullable<int> idCliente, string listaSucursales, string listaTemas, string listaEstatus, Nullable<int> rangoFechaSiNo, Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var listaSucursalesParameter = listaSucursales != null ?
                new ObjectParameter("listaSucursales", listaSucursales) :
                new ObjectParameter("listaSucursales", typeof(string));
    
            var listaTemasParameter = listaTemas != null ?
                new ObjectParameter("listaTemas", listaTemas) :
                new ObjectParameter("listaTemas", typeof(string));
    
            var listaEstatusParameter = listaEstatus != null ?
                new ObjectParameter("listaEstatus", listaEstatus) :
                new ObjectParameter("listaEstatus", typeof(string));
    
            var rangoFechaSiNoParameter = rangoFechaSiNo.HasValue ?
                new ObjectParameter("rangoFechaSiNo", rangoFechaSiNo) :
                new ObjectParameter("rangoFechaSiNo", typeof(int));
    
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTicketsByDashBoard_Result>("getTicketsByDashBoard", idClienteParameter, listaSucursalesParameter, listaTemasParameter, listaEstatusParameter, rangoFechaSiNoParameter, fechaIniParameter, fechaFinParameter);
        }
    }
}
